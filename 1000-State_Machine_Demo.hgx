<?xml version="1.0" encoding="utf-16"?>
<ProgramBlock xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <ConditionType>OnTrue</ConditionType>
  <Conditions />
  <Commands />
  <ScriptCondition>Program.AddVirtualModule ( "wallis", "1", "Switch", "");
Program.AddVirtualModule ( "wallis", "2", "Switch", "");
Program.AddVirtualModule ( "wallis", "3", "Switch", "");
return true;
</ScriptCondition>
  <ScriptSource>List&lt;HomeGenie.Data.Location&gt; locations = new List&lt;Location&gt;();
locations.Add(new Location(null) { Name = "Home" });


locations.Add(new Location(locations.Find(x =&gt; x.Name == "home")) { Name = "House" });
locations.Add(new Location(locations.Find(x =&gt; x.Name == "home")) { Name = "Garden" });

locations.Add(new Location(locations.Find(x =&gt; x.Name == "garden")) { Name = "Rear Garden" });
locations.Add(new Location(locations.Find(x =&gt; x.Name == "garden")) { Name = "Front Garden" });
locations.Add(new Location(locations.Find(x =&gt; x.Name == "garden")) { Name = "Side Garden" });

locations.Add(new Location(locations.Find(x =&gt; x.Name == "home")) { Name = "House" });
locations.Add(new Location(locations.Find(x =&gt; x.Name == "house")) { Name = "Upstairs" });
locations.Add(new Location(locations.Find(x =&gt; x.Name == "house")) { Name = "Downstairs" });

locations.Add(new Location(locations.Find(x =&gt; x.Name == "upstairs")) { Name = "Front Bedroom" });
locations.Add(new Location(locations.Find(x =&gt; x.Name == "upstairs")) { Name = "Back Bedroom" });
locations.Add(new Location(locations.Find(x =&gt; x.Name == "upstairs")) { Name = "Office" });
locations.Add(new Location(locations.Find(x =&gt; x.Name == "upstairs")) { Name = "Bathroom" });
locations.Add(new Location(locations.Find(x =&gt; x.Name == "upstairs")) { Name = "Upstairs Hall" });

locations.Add(new Location(locations.Find(x =&gt; x.Name == "downstairs")) { Name = "Kitchen" });
locations.Add(new Location(locations.Find(x =&gt; x.Name == "downstairs")) { Name = "DownstairsHall" });
locations.Add(new Location(locations.Find(x =&gt; x.Name == "downstairs")) { Name = "Front Room" });


When.ModuleParameterChange( (module, parameter) =&gt;
{
    if (parameter.Is("Status.Level") &amp;&amp; parameter.Value == "1")
    {
        var moduleLocation = locations.Find(x =&gt; x.Name == module.Instance.Location);
        moduleLocation.TryUpdateState(Enums.Trigger.SensorActivity);

        return false;
    }
    return true;
}); 

Program.GoBackground();</ScriptSource>
  <ScriptErrors>[]</ScriptErrors>
  <Domain>HomeAutomation.HomeGenie.Automation</Domain>
  <Address>1000</Address>
  <Name>State Machine Demo</Name>
  <Description />
  <Group>Wallis</Group>
  <Features />
  <AutoRestartEnabled>false</AutoRestartEnabled>
  <ActivationTime>2018-02-23T17:35:35.4084628Z</ActivationTime>
  <TriggerTime>2018-02-23T17:35:35.4534735Z</TriggerTime>
  <Type>CSharp</Type>
  <IsEnabled>true</IsEnabled>
</ProgramBlock>